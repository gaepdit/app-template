@page "{handler?}"
@model IndexModel
@{
    ViewData["Title"] = "Template Application";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>

    <!-- Minimal custom CSS for a modern look -->
<style>
    /* Overall layout */
    body {
        margin: 2rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #212529; /* Dark mode default */
        color: #f8f9fa;           /* Light text for dark background */
    }

    h1, h2, h3 {
        margin-bottom: 1rem;
    }

    a {
        color: #74b9ff;
        text-decoration: none;
    }
    a:hover {
        text-decoration: underline;
    }

    /* Modern card style */
    .modern-card {
        background-color: #343a40; /* Default for dark mode */
        color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.3);
        margin-bottom: 1.5rem;
        padding: 1rem 1.5rem;
    }
    .modern-card h2 {
        margin-top: 0;
    }

    /* Buttons */
    button {
        background-color: #0984e3;
        color: #fff;
        border: none;
        border-radius: 4px;
        padding: 0.5rem 1rem;
        cursor: pointer;
        font-size: 1rem;
    }
    button:hover {
        background-color: #74b9ff;
    }

    /* Vue transition classes for a simple fade effect */
    .fade-enter-active, .fade-leave-active {
        transition: opacity 0.4s;
    }
    .fade-enter-from, .fade-leave-to {
        opacity: 0;
    }

    /* Light mode styles */
    html[data-bs-theme="light"] body {
        background-color: #f5f6fa; /* Light mode background */
        color: #000000;           /* Dark text for light background */
    }

    html[data-bs-theme="light"] .modern-card {
        background-color: #ffffff; /* Light mode background for cards */
        color: #000000;           /* Dark text for light background */
        border-color: #dddddd;    /* Light border color */
    }
</style>
</head>
<body>

    <h1>@ViewData["Title"]</h1>

    <div id="app">
        <!-- Modern card for your helpful links -->
        <modern-card title="Some helpful temporary development links">
            <h3>Public pages</h3>
            <ul>
                <li>Add links to useful public pages.</li>
                <li><a href="api-docs/">API docs</a></li>
            </ul>

            <h3>Staff pages</h3>
            <ul>
                <li>Add links to useful staff pages.</li>
                <li><a asp-page="/Account/Index">Account page</a></li>
                <li><a asp-page="/Admin/Users/Index">All users</a></li>
                <li><a asp-page="/Admin/Maintenance/Index">Site maintenance</a></li>
            </ul>
        </modern-card>

        <!-- Another card for the Vue Example -->
        <modern-card title="Vue Counter with Transition">
            <p>Click the button to increment:</p>

            <!-- "fade" transition for the count -->
            <transition name="fade">
                <strong v-if="showCount">{{ count }}</strong>
            </transition>

            <div style="margin-top: 1rem;">
                <!-- Use v-on:click to avoid Razor conflicts -->
                <button v-on:click="incrementCounter">Increment</button>
                <button style="margin-left:0.5rem;" v-on:click="toggleCount">
                    Toggle Count
                </button>
            </div>
        </modern-card>
    </div>

    <!-- Load Vue (global build) from CDN -->
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
        const { createApp, defineComponent } = Vue;

        // A reusable "modern card" component
        const ModernCard = defineComponent({
          name: 'ModernCard',
          props: {
            title: {
              type: String,
              default: 'Card Title'
            }
          },
          template: `
            <div class="modern-card">
              <h2>{{ title }}</h2>
              <slot></slot>
            </div>
          `
        });

        // Main Vue App
        createApp({
          data() {
            return {
              count: 0,
              showCount: true
            }
          },
          components: {
            ModernCard
          },
          methods: {
            incrementCounter() {
              this.count++;
            },
            toggleCount() {
              this.showCount = !this.showCount;
            }
          }
        }).mount('#app');
    </script>

</body>
</html>
