@page "{id:guid?}"
@using MyApp.AppServices.Customers.Permissions
@using MyApp.WebApp.Pages.Shared.DisplayTemplates
@model DetailsModel
@{
    ViewData["Title"] = "Customer Details";
}

@if (Model.Item.IsDeleted)
{
    <div class="row justify-content-between align-items-center g-0 mb-2">
        <h2 class="h3 text-danger-emphasis col-md mb-md-0">This customer has been deleted</h2>
        <div class="col-md-auto d-print-none ms-md-3">
            @if (Model.UserCan[CustomerOperation.ManageDeletions])
            {
                <a asp-page="Restore" asp-route-id="@Model.Item.Id.ToString()" class="btn btn-outline-warning">Restore</a>
            }
        </div>
    </div>
}
<div class="row justify-content-between align-items-end g-0">
    <h1 class="col-md mb-md-0">
        <span class="text-body-secondary">Customer:</span> @Model.Item.Name
    </h1>
    <div class="col-md-auto d-print-none ms-md-3">
        @if (!Model.Item.IsDeleted)
        {
            <a asp-page="Edit" asp-route-id="@Model.Item.Id.ToString()" class="btn btn-outline-primary">Edit</a>
            @if (Model.UserCan[CustomerOperation.ManageDeletions])
            {
                <a asp-page="Delete" asp-route-id="@Model.Item.Id.ToString()" class="btn btn-outline-danger ms-1">Delete</a>
            }
        }
    </div>
</div>

<hr>
@if (Model.Item.IsDeleted)
{
    <div class="container mb-2">
        <dl class="row">
            <dt class="col-sm-4 col-lg-3">@Html.DisplayNameFor(m => m.Item.DeletedBy)</dt>
            <dd class="col-sm-8 col-lg-9">
                @Html.DisplayFor(m => m.Item.DeletedBy, DisplayTemplate.NameOrNotEntered)
                on @Html.DisplayFor(m => m.Item.DeletedAt, DisplayTemplate.LongDateTimeOrNotEntered)
            </dd>
            <dt class="col-sm-4 col-lg-3">@Html.DisplayNameFor(m => m.Item.DeleteComments)</dt>
            <dd class="col-sm-8 col-lg-9 text-break text-pre-line">@Model.Item.DeleteComments</dd>
        </dl>
    </div>
}

<h2 class="h3">Details</h2>

<div class="container mt-4">
    <dl class="row">
        <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.Item.Description)</dt>
        <dd class="col-md-8 col-lg-9 text-break text-pre-line">@Html.DisplayFor(m => m.Item.Description, DisplayTemplate.StringOrNotEntered)</dd>
        <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.Item.County)</dt>
        <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.Item.County, DisplayTemplate.County)</dd>
        <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.Item.Website)</dt>
        <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.Item.Website, DisplayTemplate.ProbableUrlOrNotEntered)</dd>
        <dt class="col-md-4 col-lg-3">@Html.DisplayNameFor(m => m.Item.MailingAddress)</dt>
        <dd class="col-md-8 col-lg-9">@Html.DisplayFor(m => m.Item.MailingAddress)</dd>
    </dl>
</div>

<div class="row justify-content-between align-items-end g-0 mt-4 mb-3">
    <h2 class="h3 col-md mb-md-0">Contacts</h2>
    <div class="col-md-auto d-print-none ms-md-3">
        @if (Model.UserCan[CustomerOperation.Edit])
        {
            <a asp-page="AddContact" asp-route-id="@Model.Item.Id.ToString()" class="btn btn-outline-primary">Add New Contact</a>
        }
    </div>
</div>

@if (Model.Item.Contacts.Count == 0)
{
    <p>
        <em>None.</em>
    </p>
}
else
{
    <div class="row row-cols-1 g-3">
        @foreach (var item in Model.Item.Contacts)
        {
            <div class="col">
                <div id="@item.Id.ToString()" class="card">
                    <div class="card-header @(item.Id == Model.HighlightId ? "list-group-item-success" : "")">
                        <div class="container-full">
                            <div class="row justify-content-between align-items-start g-0 my-1">
                                <div class="col">
                                    @if (string.IsNullOrEmpty(item.Name))
                                    {
                                        <h3 class="h5 card-title">@Html.DisplayFor(m => item.Title)</h3>
                                    }
                                    else
                                    {
                                        <h3 class="h5 card-title">@Html.DisplayFor(m => item.Name)</h3>
                                        @if (!string.IsNullOrEmpty(item.Title))
                                        {
                                            <h4 class="h5 card-subtitle text-body-secondary no-anchor">@Html.DisplayFor(m => item.Title)</h4>
                                        }
                                    }
                                </div>
                                @if (Model.UserCan[CustomerOperation.Edit])
                                {
                                    <div class="col-auto d-print-none ms-2">
                                        <a asp-page="EditContact" asp-route-id="@item.Id.ToString()" class="btn btn-sm btn-outline-primary">Edit</a>
                                        @if (Model.UserCan[CustomerOperation.ManageDeletions])
                                        {
                                            <a asp-page="DeleteContact" asp-route-id="@item.Id.ToString()" class="btn btn-sm btn-outline-danger ms-1">Delete</a>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="card-body px-2">
                        <div class="container">
                            <dl class="row card-text">
                                <dt>@Html.DisplayNameFor(m => item.Email)</dt>
                                <dd>@Html.DisplayFor(m => item.Email, DisplayTemplate.ProbableEmailOrNotEntered)</dd>
                                <dt>@Html.DisplayNameFor(m => item.Address)</dt>
                                <dd>@Html.DisplayFor(m => item.Address)</dd>
                                <dt>@Html.DisplayNameFor(m => item.Notes)</dt>
                                <dd class="text-break text-pre-line">@Html.DisplayFor(m => item.Notes, DisplayTemplate.StringOrNone)</dd>
                            </dl>
                        </div>
                    </div>
                    @if (item.EnteredBy is not null || item.EnteredOn is not null)
                    {
                        <small class="card-footer text-body-secondary">
                            Entered
                            @if (item.EnteredBy is not null)
                            {
                                @:by
                                @item.EnteredBy.Name
                            }
                            @if (item.EnteredOn is not null)
                            {
                                @:on
                                @Html.DisplayFor(m => item.EnteredOn.Value, DisplayTemplate.ShortDate)
                            }
                        </small>
                    }
                </div>
            </div>
        }
    </div>
}

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}
